#!/usr/bin/env ruby
#================================================================================
# IDCT用メモリ初期化ファイル生成スクリプト
# $Id$
#================================================================================

W = {0 => "0"*16}
(1..7).each {|i|
	v = (Math.cos(i * Math::PI / 16) * Math.sqrt(2) * (1 << 14) + 0.5).truncate
	W[+i] = "%016b" % v
	W[-i] = "%016b" % ((1 << 16) - v)
	STDERR.puts("W%d = %d" % [i, v])
}

#         0      2                                                 19    21  22    24  25
#        FIRST                         REPEAT * 8                            LAST   OTHERS
#        <----> <----------------------------------------------------------> <-------> <->
#         0  1   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19  18 19 20  **
#        a0 a1  a0 a1 b2 b3 a0 a1 b2 b3 a0 a1 b2 b3 a0 a1 b2 b3
COEFX = [ 4, 4,  4, 4, 5, 7, 2, 6,-1,-5, 4,-4, 7, 3, 6,-2, 3,-1, 0, 0, 0, 0,  0, 0, 0,  0 ].flatten

#        a2 a3  a2 a3 b0 b1 a2 a3 b0 b1 a2 a3 b0 b1 a2 a3 b0 b1
COEFY = [ 4, 4,  4, 4, 1, 3,-6,-2, 3,-7,-4, 4, 5,-1, 2,-6, 7,-5, 0, 0, 0, 0,  0, 0, 0,  0 ].flatten

T1IDX = [ 0, 2,  3, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 0, 1, 2,  1, 2, 3,  0 ].flatten
IMED  = [ 0, 1,  0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0 ].flatten
SAVE  = [ 0, 0,  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,  1, 1, 1,  0 ].flatten
ASKIP = [ 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0,  0, 0, 0,  0 ].flatten
FINAL = [ 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 1,  0 ].flatten

MIDX  = [ 0, 1, 2, 3, 3, 2, 1, 0, 0 ]

puts(<<EOD)
DEPTH = 256;
WIDTH = 72;
ADDRESS_RADIX = HEX;
DATA_RADIX = BIN;
CONTENT
BEGIN
EOD

8.times {|r|
	i = (r > 0 ? [] : [0, 1]) + ((r > 0 ? 2 : 4)..(r < 7 ? 21 : 19)).to_a +
		(r < 7 ? [] : [22, 23, 24]) + [25] * 12
	32.times {|n|
		c = i[n]
		puts("%02X : %b%b%b%b%02b%02b%s%s%s%s;" % [
			r * 32 + n,
			FINAL[c],
			ASKIP[c] < 0 ? (r < 7 ? 1 : 0) : ASKIP[c],
			SAVE[c],
			IMED[c],
			(c < 20 ? MIDX[r] : c == 21 ? MIDX[r + 1] : 0),
			T1IDX[c],
			W[-COEFY[c]],
			W[+COEFY[c]],
			W[-COEFX[c]],
			W[+COEFX[c]]
		])
	}
}

puts("END;")

